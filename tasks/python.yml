- pip:
    name: "{{ item }}"
    state: latest
  with_items:
    - docutils
    - virtualenvwrapper
  become: true

- pip:
    name: "{{ item }}"
    state: latest
    executable: pip3
  with_items:
    - docutils
    - ipython
  become: true

- apt:
    name: "{{ item }}"
  with_items:
    # to enable copy and paste in IPython
    - python-tk

    # for Plone 4
    # http://plone.org/documentation/manual/installing-plone/installing-on-linux-unix-bsd/debian-libraries
    - build-essential
    - libbz2-dev
    - libjpeg62-dev
    - libreadline-gplv2-dev
    - libssl-dev
    - libxml2-dev
    - libxslt1-dev
    - poppler-utils
    - python-dev
    - wv
    - zlib1g-dev
    - xpdf # XXX isso Ã© para o portal modelo???

    # for psycopg
    - libpq-dev

    # more
    - graphviz
    - graphviz-dev

  become: true

# previously used
#    apt: name=python-ldap state=build-dep
#  but that stopped working on 16.04 (xenial)
#  I think that's no longer necessary... but should keep an eye on it
- apt: name=python-ldap
  become: true

# IPython startup scripts
- command: ipython profile create
- command: ipython profile create zope2
- file:
    src: "{{ files }}/ipython/{{ item | basename }}"
    dest: "{{ home }}/.ipython/{{ item }}"
    state: link
    force: yes
  with_items:
    - profile_default/ipython_config.py
    - profile_default/startup/virtualenv-for-ipython.py
    - profile_default/startup/autowidth.py

    - profile_zope2/ipython_config.py
    - profile_zope2/startup/ipy_profile_zope.py
    - profile_zope2/startup/autowidth.py

# buildout
- file: state=directory path="{{ home }}/.buildout"
- file: state=directory path="{{ home }}/.buildout/eggs"
- file: state=directory path="{{ home }}/.buildout/downloads"
- file: state=directory path="{{ home }}/.buildout/extends"
- template: src=buildout/default.cfg dest="{{ home }}/.buildout/default.cfg"

# To debug nicely with sauna.reload
# https://github.com/collective/sauna.reload#debugging-with-saunareload
- file: src="{{ files }}/.pdbrc" dest="{{ home }}/.pdbrc" state=link

# virtualenvwrapper automatic actions
- file:
    src: "{{ files }}/virtualenvs/{{ item }}"
    dest: "{{ home }}/.virtualenvs/{{ item }}"
    state: link
    force: yes
  with_items:
    - postactivate
    - postdeactivate
    - postmkvirtualenv
