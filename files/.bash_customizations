##############################
#   MEUS ALIASES E FUNÇÕES   #
##############################

# GIT
alias s='git status -sb'
alias ss='git status -s | cut -c4- | xargs vim'
alias d='clear; cdiff --ignore-all-space'
alias di='clear; cdiff --ignore-all-space --cached'
alias dd='clear; git difftool --no-prompt'
alias ddi='clear; git difftool --no-prompt --cached'
# poderia usar  | sed 's/\([0-9]* [a-z]*\) ago/\1/' mas isso quebra o "less" do git
# alias lo="git log --format='%ad %Cblue%an%C(auto) %h %s%d' --date=relative --branches --remotes --tags --graph --oneline --decorate"
alias lo="git log --format='%ad %Cblue%an%C(auto) %h %s%d' --date=relative --branches --remotes --tags --graph"
alias amend='git commit --amend'
alias mkig='cp ~/.z/dots/.gitignore .'
alias gitpush='git push origin `git status | head -n 1 | sed "s/# On branch //"`'
alias svnorigem='git log -n 1 | grep svn-id | sed -e "s#git-svn-id: \([^@]\+\)@.\+#\1#"'
alias unwhite='git stash && git stash apply && git diff -w > foo.patch && git checkout . && git apply foo.patch && git rm foo.patch'
alias gitk='gitk --all &'
alias svnlog='svn log -l 5 `git log | grep svn-id | head -n 1 | sed -e "s#git-svn-id: \([^@]\+\)@.\+#\1#"`'
# corrigir "mv" que deveria ter sido "git mv"
function a ()
{
    if [ $# -eq 0 ]; then
        git add .
    else
        git add "$*"
    fi
}
gmv ()
{
    mv $2 $1 && git mv $1 $2
}

svnclone()
{
# Figure out the revision number based on when a branch was created, then
# from r28571, returns -r28571:HEAD
    rev=$(svn log $1 | egrep "r[0-9]+" | tail -1 | sed -e "s#\(r[0-9]\+\).\+#-\1:HEAD#")
    git svn clone -s $rev $1
}

function c ()
{
    if [ $# -eq 0 ]; then
        git commit
    else
        msg=$(echo "$*" | sed 's/.*/\u&/')
        len_line_1=$(echo "$*" | sed -n 1p | tr -d '\n' | wc -m)
        len_line_2=$(echo "$*" | sed -n 2p | tr -d '\n' | wc -m)
        max_len=$(echo "$*" | wc --max-line-length)

        if [ $len_line_1 -gt 50 -o $len_line_2 -gt 0 -o $max_len -gt 72 ]; then
            git commit -m "$msg" -e
        else
            git commit -m "$msg"
        fi
    fi
}


alias zclip='xclip -selection c '
alias pz='pwd | tr -d ''[[:space:]]'' | xclip -selection c'
alias e='vim'
alias x='trash-put'
alias z='cd ..'
alias zz='cd ../..'
alias zzz='cd ../../..'
alias zzzz='cd ../../../..'
alias zzzzz='cd ../../../../..'
alias l='ls -otrAFh'
alias ll='ls -CF'
alias windows-mount='mount -t cifs -o username=mazza,workgroup=senado.gov.br'
alias ddate='date +%d/%m/%Y'
alias ack='clear; ACK_PAGER_COLOR="less -x4SRFX" /usr/bin/ack-grep -a --follow'  # http://shuttlethread.com/blog/useful-ack-defaults
alias cp='cp -a -v'

tt ()
{
	# remove "/" do final do nome do diretorio, que tipicamente aparece ao completar com TAB
	local dir="`echo $1 | sed \"s/\/$//\"`" ;
	tar -cf "$dir.`hostname`.`date +"%Y-%m-%d.%H%M"`.tar" $1
}

tz ()
{
	# remove "/" do final do nome do diretorio, que tipicamente aparece ao completar com TAB
	local dir="`echo $1 | sed \"s/\/$//\"`" ;
	tar -czf "$dir.`hostname`.`date +"%Y-%m-%d.%H%M"`.tar.gz" $1
}

revertall-svn ()
{
	svn st | awk "{print \$2}" | xargs svn revert
}

dicp ()
{
	diff -rq . ../svn/  | grep "^Files.*differ" | awk '{print "cp", $2, $4, ";"}'
}

sel ()
{
	awk "{print \$$1}"
}

t ()
{
	level=${1:-3}
	clear; tree -L $level
}

g ()
{
    grep -rIHn --color \
         --exclude-dir=\.git --exclude-dir=\.hg --exclude-dir=\.svn \
         --exclude-dir=develop-eggs --exclude-dir='*.egg-info' \
         --exclude-dir=_build \
         --exclude-dir=var \
         --exclude-dir=htmlcov \
         --exclude=.installed.cfg \
         --exclude=*.sublime-workspace \
         "$*" .
}

gi ()
{
    grep -rIiHn --color \
         --exclude-dir=\.git --exclude-dir=\.hg --exclude-dir=\.svn \
         --exclude-dir=develop-eggs --exclude-dir='*.egg-info' \
         --exclude-dir=_build \
         --exclude-dir=var \
         --exclude-dir=htmlcov \
         --exclude=.installed.cfg \
         --exclude=*.sublime-workspace \
         "$*" .
}

f ()
{
    find -L -iname "$*"
}
# mostrando caminhos completos
ff ()
{
    find -L `pwd` -iname "$*"
}

fz ()
{
    readlink -f "$*" | tr -d '[[:space:]]' | xclip -selection c
}


####################
#   E MAIS ...     #
####################


function ps1_dir () {
    dn=$(dirname $(pwd | sed -e "s@$HOME@~@"))
    # in ~ yields "./" that becomes ""
    # in / yields "//" that becomes "/"
    echo "$dn/" | sed -e 's@^\./$@@' | sed -e 's@^//$@/@'
}

function ps1_base() {
    # in ~ yields "~"
    # in / yields "/" that becomes ""
    basename "$(pwd | sed -e "s@$HOME@~@")"
}

function ps1_sharp() {
    if [ $(whoami) == 'root' ]; then
        echo ' #'
    else
        echo ''
    fi
}

RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
BLUE="\[\033[0;34m\]"
CYAN="\[\033[0;36m\]"
NO_COLOUR="\[\033[0m\]"

PS1="$YELLOW\$(ps1_base)$NO_COLOUR\$(ps1_sharp) "

# function parse_git_branch () {
#     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
# }
#PS1="  [\w]\\$ " # prompt mais curto
#PS1="$GREEN\u@machine$NO_COLOUR:\w$YELLOW\$(parse_git_branch)$NO_COLOUR\$ "
#PS1="$GREEN\w$YELLOW\$(parse_git_branch)$NO_COLOUR\$ \e[0;34m"
# PS1="$GREEN\w$YELLOW\$(parse_git_branch)$NO_COLOUR "

####################
#     AMBIENTE     #
####################

export HISTFILESIZE=1000000000
export HISTSIZE=1000000

# HTML TIDY
HTML_TIDY=~/.z/tidy.conf
export HTML_TIDY

# ORACLE

ORACLE_HOME=/usr/lib/oracle/xe/app/oracle/product/10.2.0/server
export ORACLE_HOME
export ORACLE_SID=XE

PATH=$PATH:$ORACLE_HOME/bin
export PATH

SQLPATH=~/.z/oracle-sql
export SQLPATH

export EDITOR='vim'

# default para sauna.reload
export RELOAD_PATH=src

# para virtualenvwrapper
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/work
source /usr/local/bin/virtualenvwrapper.sh

# 256 colors
if [ -n "$DISPLAY" -a "$TERM" == "xterm" ]; then
    export TERM=xterm-256color
fi
